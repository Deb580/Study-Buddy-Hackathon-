class ExportService {
  // Convert flashcards to Quizlet CSV format
  generateQuizletCSV(flashcards) {
    const rows = [['term', 'definition']];
    
    flashcards.forEach(card => {
      // Skip cards with missing data
      if (!card || !card.question || !card.answer) {
        console.warn('Skipping invalid flashcard:', card);
        return;
      }
      
      // Escape commas and quotes for CSV
      const term = this.escapeCSV(card.question);
      const definition = this.escapeCSV(card.answer);
      rows.push([term, definition]);
    });

    return rows.map(row => row.join(',')).join('\n');
  }

  // Convert quiz to Kahoot JSON format
  generateKahootJSON(questions, title = 'Study Quiz') {
    return JSON.stringify({
      title,
      description: 'Generated by AI Study Assistant',
      questions: questions.map((q, idx) => ({
        question: q.question,
        time: 20, // seconds
        points: true,
        answers: q.options.map((option, i) => ({
          text: option,
          correct: i === q.correctAnswer
        }))
      }))
    }, null, 2);
  }

  // Convert quiz to Kahoot Excel-ready format
  generateKahootExcel(questions) {
    // Simplified - return CSV that can be imported to Excel
    const rows = [
      ['Question', 'Answer 1', 'Answer 2', 'Answer 3', 'Answer 4', 'Correct Answer', 'Time (sec)']
    ];

    questions.forEach(q => {
      rows.push([
        q.question,
        q.options[0] || '',
        q.options[1] || '',
        q.options[2] || '',
        q.options[3] || '',
        (q.correctAnswer + 1).toString(), // Kahoot uses 1-indexed
        '20'
      ]);
    });

    return rows.map(row => 
      row.map(cell => `"${cell.replace(/"/g, '""')}"`).join(',')
    ).join('\n');
  }

  // Generate Anki deck format (simplified)
  generateAnkiDeck(flashcards, title = 'AI Study Deck') {
    const deck = {
      deckName: title,
      cards: flashcards.map(card => ({
        front: card.question,
        back: card.answer,
        tags: ['ai-generated', 'study-assistant']
      }))
    };

    return JSON.stringify(deck, null, 2);
  }

  // Generate Google Forms quiz format
  generateGoogleForms(questions, title = 'Study Quiz') {
    const form = {
      title,
      description: 'Generated by AI Study Assistant',
      questions: questions.map((q, idx) => ({
        question: q.question,
        type: 'multiple_choice',
        options: q.options,
        correctAnswer: q.correctAnswer,
        explanation: q.explanation
      }))
    };

    return JSON.stringify(form, null, 2);
  }

  // Generate study guide markdown
  generateStudyGuide(studyData) {
    let markdown = `# Study Guide\n\n`;
    
    if (studyData.summary) {
      markdown += `## Summary\n\n`;
      studyData.summary.forEach((point, index) => {
        markdown += `${index + 1}. ${point}\n`;
      });
      markdown += `\n`;
    }

    if (studyData.flashcards) {
      markdown += `## Flashcards\n\n`;
      studyData.flashcards.forEach((card, index) => {
        markdown += `### Card ${index + 1}\n`;
        markdown += `**Q:** ${card.question}\n\n`;
        markdown += `**A:** ${card.answer}\n\n`;
      });
    }

    if (studyData.quiz) {
      markdown += `## Practice Questions\n\n`;
      studyData.quiz.forEach((q, index) => {
        markdown += `### Question ${index + 1}\n`;
        markdown += `${q.question}\n\n`;
        q.options.forEach((option, optIndex) => {
          const marker = optIndex === q.correctAnswer ? '✓' : '○';
          markdown += `${marker} ${option}\n`;
        });
        markdown += `\n**Answer:** ${q.options[q.correctAnswer]}\n\n`;
        markdown += `**Explanation:** ${q.explanation}\n\n`;
      });
    }

    return markdown;
  }

  escapeCSV(text) {
    // Add null/undefined check
    if (!text) return '';
    
    // Convert to string if not already
    text = String(text);
    
    if (text.includes(',') || text.includes('"') || text.includes('\n')) {
      return `"${text.replace(/"/g, '""')}"`;
    }
    return text;
  }

  // Get file extension for different formats
  getFileExtension(format) {
    const extensions = {
      'quizlet': 'csv',
      'kahoot-json': 'json',
      'kahoot-excel': 'csv',
      'anki': 'json',
      'google-forms': 'json',
      'study-guide': 'md'
    };
    return extensions[format] || 'txt';
  }

  // Get MIME type for different formats
  getMimeType(format) {
    const mimeTypes = {
      'quizlet': 'text/csv',
      'kahoot-json': 'application/json',
      'kahoot-excel': 'text/csv',
      'anki': 'application/json',
      'google-forms': 'application/json',
      'study-guide': 'text/markdown'
    };
    return mimeTypes[format] || 'text/plain';
  }
}

module.exports = new ExportService();